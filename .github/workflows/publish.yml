name: publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os-name: [ linux, win64, macos, macos-arm ]
        include:
          - os-name: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os-name: win64
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - os-name: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true
          override: true

      - name: Build
        run: |
          cargo build --all --release
          mkdir builds
          mkdir builds/svecli-${{ matrix.os-name }}

      - name: Move compiled binary to builds folder (Windows)
        if: ${{ matrix.os-name == 'win64' }}
        run: mv target/release/svecli.exe builds/svecli-${{ matrix.os-name }}

      - name: Move compiled binary to builds folder (non-Windows)
        if: ${{ matrix.os-name != 'win64' }}
        run: mv target/release/svecli builds/svecli-${{ matrix.os-name }}

      - name: Create binary archive
        run: tar -C builds -czvf builds/svecli-${{ matrix.os-name }}.tar.gz svecli-${{ matrix.os-name }}

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: svecli-${{ matrix.os-name }}
          path: builds/svecli-${{ matrix.os-name }}.tar.gz

  gh_release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Current Version
        uses: dante-signal31/rust-app-version@v1.0.0
        id: crate-version

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          name: v${{ steps.crate-version.outputs.app_version }}
          tag_name: ${{ steps.crate-version.outputs.app_version }}
          files: |
            svecli-win64/svecli-win64.tar.gz
            svecli-linux/svecli-linux.tar.gz
            svecli-macos/svecli-macos.tar.gz
            svecli-macos-arm/svecli-macos-arm.tar.gz

  npm_publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: gh_release
    defaults:
      run:
        working-directory: ./npm
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup .npmrc file to publish to npm
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: npm i
        run: npm i --ignore-scripts

      - name: Publish package to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  cargo_publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Publish crate to cargo
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_ACCESS_TOKEN }}
          
